{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SilentBase\\\\Desktop\\\\tecnobot_react\\\\ai-chatbot-app\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport OpenAI from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const openai = new OpenAI();\n  async function main() {\n    const completion = await openai.chat.completions.create({\n      messages: [{\n        \"role\": \"system\",\n        \"content\": \"You are a helpful assistant.\"\n      }, {\n        \"role\": \"user\",\n        \"content\": \"Who won the world series in 2020?\"\n      }, {\n        \"role\": \"assistant\",\n        \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"\n      }, {\n        \"role\": \"user\",\n        \"content\": \"Where was it played?\"\n      }],\n      model: \"gpt-3.5-turbo\"\n    });\n    console.log(completion.choices[0]);\n  }\n  const chatWithGPT3 = async userInput => {\n    const apiEndpoint = 'https://api.openai.com/v1/completions';\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer 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`\n    };\n    const data = {\n      prompt: userInput,\n      max_tokens: 150\n    };\n    try {\n      console.log('ciao fra');\n      const response = await axios.post(apiEndpoint, data, {\n        headers\n      });\n      return response.data.choices[0].text.trim();\n    } catch (error) {\n      console.error('Error communicating with the API:', error.message);\n      return '';\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      user: true\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    const aiMessage = {\n      text: '...',\n      user: false\n    };\n    setMessages(prevMessages => [...prevMessages, aiMessage]);\n    const response = await chatWithGPT3(input);\n    const newAiMessage = {\n      text: response,\n      user: false\n    };\n    setMessages(prevMessages => [...prevMessages.slice(0, -1), newAiMessage]);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user ? 'user-message' : 'ai-message'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Xhz1M2btVGAzY17pd7+8a34J2bk=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","OpenAI","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","openai","main","completion","chat","completions","create","model","console","log","choices","chatWithGPT3","userInput","apiEndpoint","headers","data","prompt","max_tokens","response","post","text","trim","error","message","handleSubmit","e","preventDefault","userMessage","user","prevMessages","aiMessage","newAiMessage","slice","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/SilentBase/Desktop/tecnobot_react/ai-chatbot-app/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Chatbot.css';\r\nimport OpenAI from \"openai\";\r\n\r\nconst Chatbot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\nconst openai = new OpenAI();\r\n\r\nasync function main() {\r\n  const completion = await openai.chat.completions.create({\r\n    messages: [{\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\r\n        {\"role\": \"user\", \"content\": \"Who won the world series in 2020?\"},\r\n        {\"role\": \"assistant\", \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"},\r\n        {\"role\": \"user\", \"content\": \"Where was it played?\"}],\r\n    model: \"gpt-3.5-turbo\",\r\n  });\r\n\r\n  console.log(completion.choices[0]);\r\n}\r\n\r\nconst chatWithGPT3 = async (userInput) => {\r\n    const apiEndpoint = 'https://api.openai.com/v1/completions';\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer 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`\r\n    };\r\n\r\n    const data = {\r\n      prompt: userInput,\r\n      max_tokens: 150\r\n    };\r\ntry {\r\n      console.log('ciao fra');\r\n      const response = await axios.post(apiEndpoint, data, { headers });\r\n      return response.data.choices[0].text.trim();\r\n    } catch (error) {\r\n      console.error('Error communicating with the API:', error.message);\r\n      return '';\r\n    }\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    const userMessage = { text: input, user: true };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n    const aiMessage = { text: '...', user: false };\r\n    setMessages((prevMessages) => [...prevMessages, aiMessage]);\r\n    const response = await chatWithGPT3(input);\r\n    const newAiMessage = { text: response, user: false };\r\n    setMessages((prevMessages) => [...prevMessages.slice(0, -1), newAiMessage]);\r\n    setInput('');\r\n  };\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.user ? 'user-message' : 'ai-message'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form className=\"chatbot-input-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Chatbot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}