{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SilentBase\\\\Desktop\\\\tecnobot_react\\\\ai-chatbot-app\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const chatWithGPT3 = async userInput => {\n    const apiEndpoint = 'https://api.openai.com/v1/engines/gpt-3.5-turbo/completions';\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer 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`\n    };\n    const data = {\n      prompt: userInput,\n      max_tokens: 150\n    };\n    try {\n      console.log('ciao fra');\n      const response = await axios.post(apiEndpoint, data, {\n        headers\n      });\n      return response.data.choices[0].text.trim();\n    } catch (error) {\n      console.error('Error communicating with the API:', error.message);\n      return '';\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      user: true\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    const aiMessage = {\n      text: '...',\n      user: false\n    };\n    setMessages(prevMessages => [...prevMessages, aiMessage]);\n    const response = await chatWithGPT3(input);\n    const newAiMessage = {\n      text: response,\n      user: false\n    };\n    setMessages(prevMessages => [...prevMessages.slice(0, -1), newAiMessage]);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user ? 'user-message' : 'ai-message'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Xhz1M2btVGAzY17pd7+8a34J2bk=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","chatWithGPT3","userInput","apiEndpoint","headers","data","prompt","max_tokens","console","log","response","post","choices","text","trim","error","message","handleSubmit","e","preventDefault","userMessage","user","prevMessages","aiMessage","newAiMessage","slice","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/SilentBase/Desktop/tecnobot_react/ai-chatbot-app/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\nconst chatWithGPT3 = async (userInput) => {\r\n    const apiEndpoint = 'https://api.openai.com/v1/engines/gpt-3.5-turbo/completions';\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer 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`\r\n    };\r\n\r\n    const data = {\r\n      prompt: userInput,\r\n      max_tokens: 150\r\n    };\r\ntry {\r\n      console.log('ciao fra');\r\n      const response = await axios.post(apiEndpoint, data, { headers });\r\n      return response.data.choices[0].text.trim();\r\n    } catch (error) {\r\n      console.error('Error communicating with the API:', error.message);\r\n      return '';\r\n    }\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    const userMessage = { text: input, user: true };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n    const aiMessage = { text: '...', user: false };\r\n    setMessages((prevMessages) => [...prevMessages, aiMessage]);\r\n    const response = await chatWithGPT3(input);\r\n    const newAiMessage = { text: response, user: false };\r\n    setMessages((prevMessages) => [...prevMessages.slice(0, -1), newAiMessage]);\r\n    setInput('');\r\n  };\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.user ? 'user-message' : 'ai-message'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form className=\"chatbot-input-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Chatbot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}