{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SilentBase\\\\Desktop\\\\tecnobot_react\\\\ai-chatbot-app\\\\src\\\\Chatbot.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nconst Chatbot = () => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const chatWithGPT3 = async userInput => {\n    const endopoint = \"https://t5236oytil.execute-api.eu-south-1.amazonaws.com/fase1/chat\";\n    const data = {\n      message: userInput\n    };\n    try {\n      const response = await axios.post(endopoint);\n      console.log(response);\n      //return response.data.choices[0].message.content;\n    } catch (error) {\n      console.error('Error communicating with the API:', error.message);\n      return '';\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      user: true\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    const aiMessage = {\n      text: '...',\n      user: false\n    };\n    setMessages(prevMessages => [...prevMessages, aiMessage]);\n    const response = await chatWithGPT3(input);\n    const newAiMessage = {\n      text: response,\n      user: false\n    };\n    setMessages(prevMessages => [...prevMessages.slice(0, -1), newAiMessage]);\n    setInput('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `message ${message.user ? 'user-message' : 'ai-message'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, message.text))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"chatbot-input-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","axios","Chatbot","input","setInput","messages","setMessages","chatWithGPT3","userInput","endopoint","data","message","response","post","console","log","error","handleSubmit","e","preventDefault","trim","userMessage","text","user","prevMessages","aiMessage","newAiMessage","slice","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","key","onSubmit","type","value","onChange","target","placeholder"],"sources":["C:/Users/SilentBase/Desktop/tecnobot_react/ai-chatbot-app/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\nconst chatWithGPT3 = async (userInput) => {\r\n    \r\n\r\nconst endopoint = \"https://t5236oytil.execute-api.eu-south-1.amazonaws.com/fase1/chat\"\r\nconst data = {\r\n  message: userInput\r\n  };\r\n\r\ntry {\r\n      const response = await axios.post(endopoint);\r\n      console.log(response);\r\n      //return response.data.choices[0].message.content;\r\n    } catch (error) {\r\n      console.error('Error communicating with the API:', error.message);\r\n      return '';\r\n    }\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    const userMessage = { text: input, user: true };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n    const aiMessage = { text: '...', user: false };\r\n    setMessages((prevMessages) => [...prevMessages, aiMessage]);\r\n    const response = await chatWithGPT3(input);\r\n    const newAiMessage = { text: response, user: false };\r\n    setMessages((prevMessages) => [...prevMessages.slice(0, -1), newAiMessage]);\r\n    setInput('');\r\n  };\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.user ? 'user-message' : 'ai-message'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form className=\"chatbot-input-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Chatbot;"],"mappings":"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"},"metadata":{},"sourceType":"module"}